// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Ranking",
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/add/score/playerId/{playerId}/score/{points}/isRelative/{isRelative}": {
      "post": {
        "description": "It adds a player score",
        "tags": [
          "top"
        ],
        "summary": "Add a player score",
        "operationId": "addPlayer",
        "parameters": [
          {
            "type": "integer",
            "name": "playerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "points",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "isRelative",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List add score  players",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Players Not Found"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/top/position/{position}/players/{players}": {
      "get": {
        "description": "It returns a list of the first x players from the top relative to a position",
        "tags": [
          "top"
        ],
        "summary": "Get relative top x players",
        "operationId": "topListRelative",
        "parameters": [
          {
            "type": "integer",
            "name": "position",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "players",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List the top players relative to a position",
            "schema": {
              "$ref": "#/definitions/PlayersList"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Players Not Found"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/top/{number}": {
      "get": {
        "description": "It returns a list of the first x players from the top",
        "tags": [
          "top"
        ],
        "summary": "Get top x players",
        "operationId": "topList",
        "parameters": [
          {
            "type": "integer",
            "name": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List the top players",
            "schema": {
              "$ref": "#/definitions/PlayersList"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Players Not Found"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Player": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "TotalScore": {
          "type": "integer"
        }
      }
    },
    "PlayersList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Player"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Ranking",
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/add/score/playerId/{playerId}/score/{points}/isRelative/{isRelative}": {
      "post": {
        "description": "It adds a player score",
        "tags": [
          "top"
        ],
        "summary": "Add a player score",
        "operationId": "addPlayer",
        "parameters": [
          {
            "type": "integer",
            "name": "playerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "points",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "isRelative",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List add score  players",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Players Not Found"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/top/position/{position}/players/{players}": {
      "get": {
        "description": "It returns a list of the first x players from the top relative to a position",
        "tags": [
          "top"
        ],
        "summary": "Get relative top x players",
        "operationId": "topListRelative",
        "parameters": [
          {
            "type": "integer",
            "name": "position",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "players",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List the top players relative to a position",
            "schema": {
              "$ref": "#/definitions/PlayersList"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Players Not Found"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/top/{number}": {
      "get": {
        "description": "It returns a list of the first x players from the top",
        "tags": [
          "top"
        ],
        "summary": "Get top x players",
        "operationId": "topList",
        "parameters": [
          {
            "type": "integer",
            "name": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List the top players",
            "schema": {
              "$ref": "#/definitions/PlayersList"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Players Not Found"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Player": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "TotalScore": {
          "type": "integer"
        }
      }
    },
    "PlayersList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Player"
      }
    }
  }
}`))
}
